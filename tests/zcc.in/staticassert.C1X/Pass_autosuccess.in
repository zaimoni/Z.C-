SUFFIXES h hpp
OBJECTLIKE_MACRO STATIC_ASSERT _Static_assert static_assert
// (C)2009,2010 Kenneth Boyd, license: MIT.txt

#include <limits.h>

STATIC_ASSERT(1,"automatic success has failed");

// check unary +
STATIC_ASSERT(+1,"automatic success has failed");
STATIC_ASSERT(+'A',"automatic success has failed");

// check unary -
STATIC_ASSERT(-1,"automatic success has failed");
STATIC_ASSERT(-'A',"automatic success has failed");

// check unary !
STATIC_ASSERT(!0,"automatic success has failed");

// check unary ~ (unsigned only, signed is target-specific testing)
STATIC_ASSERT(~0U,"automatic success has failed");
STATIC_ASSERT(~0UL,"automatic success has failed");
STATIC_ASSERT(~0ULL,"automatic success has failed");
STATIC_ASSERT(~1U,"automatic success has failed");
STATIC_ASSERT(~1UL,"automatic success has failed");
STATIC_ASSERT(~1ULL,"automatic success has failed");
STATIC_ASSERT(!~UINT_MAX,"automatic success has failed");
STATIC_ASSERT(!~ULONG_MAX,"automatic success has failed");
STATIC_ASSERT(!~ULLONG_MAX,"automatic success has failed");

// check %
STATIC_ASSERT(1%2,"automatic success has failed");
STATIC_ASSERT(!(0%2),"automatic success has failed");
STATIC_ASSERT(!(1%1),"automatic success has failed");
STATIC_ASSERT(!(0%1),"automatic success has failed");

// check /
STATIC_ASSERT(2/1,"automatic success has failed");
STATIC_ASSERT(1/1,"automatic success has failed");
STATIC_ASSERT(!(1/2),"automatic success has failed");

// check *
STATIC_ASSERT(!(0*-1),"automatic success has failed");
STATIC_ASSERT(!(0*1),"automatic success has failed");
STATIC_ASSERT(!(0*2),"automatic success has failed");
STATIC_ASSERT(!(-1*0),"automatic success has failed");
STATIC_ASSERT(!(1*0),"automatic success has failed");
STATIC_ASSERT(!(2*0),"automatic success has failed");
STATIC_ASSERT(-1*-1,"automatic success has failed");
STATIC_ASSERT(-1*1,"automatic success has failed");
STATIC_ASSERT(-1*2,"automatic success has failed");
STATIC_ASSERT(1*-1,"automatic success has failed");
STATIC_ASSERT(1*1,"automatic success has failed");
STATIC_ASSERT(1*2,"automatic success has failed");
STATIC_ASSERT(2*-1,"automatic success has failed");
STATIC_ASSERT(2*1,"automatic success has failed");
STATIC_ASSERT(2*2,"automatic success has failed");

// check +
STATIC_ASSERT(-1+-1,"automatic success has failed");
STATIC_ASSERT(-1+0,"automatic success has failed");
STATIC_ASSERT(!(-1+1),"automatic success has failed");
STATIC_ASSERT(0+-1,"automatic success has failed");
STATIC_ASSERT(!(0+0),"automatic success has failed");
STATIC_ASSERT(0+1,"automatic success has failed");
STATIC_ASSERT(!(1+-1),"automatic success has failed");
STATIC_ASSERT(1+0,"automatic success has failed");
STATIC_ASSERT(1+1,"automatic success has failed");

// check -
STATIC_ASSERT(!(-1- -1),"automatic success has failed");
STATIC_ASSERT(-1-0,"automatic success has failed");
STATIC_ASSERT(-1-1,"automatic success has failed");
STATIC_ASSERT(0- -1,"automatic success has failed");
STATIC_ASSERT(!(0-0),"automatic success has failed");
STATIC_ASSERT(0-1,"automatic success has failed");
STATIC_ASSERT(1- -1,"automatic success has failed");
STATIC_ASSERT(1-0,"automatic success has failed");
STATIC_ASSERT(!(1-1),"automatic success has failed");

// check <<, >>
STATIC_ASSERT(!(0<<0),"automatic success has failed");
STATIC_ASSERT(!(0<<1),"automatic success has failed");
STATIC_ASSERT(1<<0,"automatic success has failed");
STATIC_ASSERT(1<<1,"automatic success has failed");

// check <, <=, >=, >
STATIC_ASSERT(!(-1< -1),"automatic success has failed");
STATIC_ASSERT(-1<0,"automatic success has failed");
STATIC_ASSERT(-1<1,"automatic success has failed");
STATIC_ASSERT(!(0< -1),"automatic success has failed");
STATIC_ASSERT(!(0<0),"automatic success has failed");
STATIC_ASSERT(0<1,"automatic success has failed");
STATIC_ASSERT(!(1< -1),"automatic success has failed");
STATIC_ASSERT(!(1<0),"automatic success has failed");
STATIC_ASSERT(!(1<1),"automatic success has failed");

STATIC_ASSERT(-1<= -1,"automatic success has failed");
STATIC_ASSERT(-1<=0,"automatic success has failed");
STATIC_ASSERT(-1<=1,"automatic success has failed");
STATIC_ASSERT(!(0<= -1),"automatic success has failed");
STATIC_ASSERT(0<=0,"automatic success has failed");
STATIC_ASSERT(0<=1,"automatic success has failed");
STATIC_ASSERT(!(1<= -1),"automatic success has failed");
STATIC_ASSERT(!(1<=0),"automatic success has failed");
STATIC_ASSERT(1<=1,"automatic success has failed");

STATIC_ASSERT(-1>= -1,"automatic success has failed");
STATIC_ASSERT(!(-1>=0),"automatic success has failed");
STATIC_ASSERT(!(-1>=1),"automatic success has failed");
STATIC_ASSERT(0>= -1,"automatic success has failed");
STATIC_ASSERT(0>=0,"automatic success has failed");
STATIC_ASSERT(!(0>=1),"automatic success has failed");
STATIC_ASSERT(1>= -1,"automatic success has failed");
STATIC_ASSERT(1>=0,"automatic success has failed");
STATIC_ASSERT(1>=1,"automatic success has failed");

STATIC_ASSERT(!(-1> -1),"automatic success has failed");
STATIC_ASSERT(!(-1>0),"automatic success has failed");
STATIC_ASSERT(!(-1>1),"automatic success has failed");
STATIC_ASSERT(0> -1,"automatic success has failed");
STATIC_ASSERT(!(0>0),"automatic success has failed");
STATIC_ASSERT(!(0>1),"automatic success has failed");
STATIC_ASSERT(1> -1,"automatic success has failed");
STATIC_ASSERT(1>0,"automatic success has failed");
STATIC_ASSERT(!(1>1),"automatic success has failed");

// check ==, !=
STATIC_ASSERT(-1== -1,"automatic success has failed");
STATIC_ASSERT(!(-1==0),"automatic success has failed");
STATIC_ASSERT(!(-1==1),"automatic success has failed");
STATIC_ASSERT(!(0== -1),"automatic success has failed");
STATIC_ASSERT(0==0,"automatic success has failed");
STATIC_ASSERT(!(0==1),"automatic success has failed");
STATIC_ASSERT(!(1== -1),"automatic success has failed");
STATIC_ASSERT(!(1==0),"automatic success has failed");
STATIC_ASSERT(1==1,"automatic success has failed");

STATIC_ASSERT(!(-1!= -1),"automatic success has failed");
STATIC_ASSERT(-1!=0,"automatic success has failed");
STATIC_ASSERT(-1!=1,"automatic success has failed");
STATIC_ASSERT(0!= -1,"automatic success has failed");
STATIC_ASSERT(!(0!=0),"automatic success has failed");
STATIC_ASSERT(0!=1,"automatic success has failed");
STATIC_ASSERT(1!= -1,"automatic success has failed");
STATIC_ASSERT(1!=0,"automatic success has failed");
STATIC_ASSERT(!(1!=1),"automatic success has failed");

// check & ^ | 
STATIC_ASSERT(!(0&0),"automatic success has failed");
STATIC_ASSERT(!(0&1),"automatic success has failed");
STATIC_ASSERT(!(1&0),"automatic success has failed");
STATIC_ASSERT(1&1,"automatic success has failed");

STATIC_ASSERT(!(0^0),"automatic success has failed");
STATIC_ASSERT(0^1,"automatic success has failed");
STATIC_ASSERT(1^0,"automatic success has failed");
STATIC_ASSERT(!(1^1),"automatic success has failed");

STATIC_ASSERT(!(0|0),"automatic success has failed");
STATIC_ASSERT(0|1,"automatic success has failed");
STATIC_ASSERT(1|0,"automatic success has failed");
STATIC_ASSERT(1|1,"automatic success has failed");

// check && ||
STATIC_ASSERT(-1&& -1,"automatic success has failed");
STATIC_ASSERT(!(-1&&0),"automatic success has failed");
STATIC_ASSERT(-1&&1,"automatic success has failed");
STATIC_ASSERT(!(0&& -1),"automatic success has failed");
STATIC_ASSERT(!(0&&0),"automatic success has failed");
STATIC_ASSERT(!(0&&1),"automatic success has failed");
STATIC_ASSERT(1&& -1,"automatic success has failed");
STATIC_ASSERT(!(1&&0),"automatic success has failed");
STATIC_ASSERT(1&&1,"automatic success has failed");

STATIC_ASSERT(-1|| -1,"automatic success has failed");
STATIC_ASSERT(-1||0,"automatic success has failed");
STATIC_ASSERT(-1||1,"automatic success has failed");
STATIC_ASSERT(0|| -1,"automatic success has failed");
STATIC_ASSERT(!(0||0),"automatic success has failed");
STATIC_ASSERT(0||1,"automatic success has failed");
STATIC_ASSERT(1|| -1,"automatic success has failed");
STATIC_ASSERT(1||0,"automatic success has failed");
STATIC_ASSERT(1||1,"automatic success has failed");

// check ? :
STATIC_ASSERT(-1 ? -1 : -1,"automatic success has failed");
STATIC_ASSERT(-1 ? -1 : 0,"automatic success has failed");
STATIC_ASSERT(-1 ? -1 : 1,"automatic success has failed");
STATIC_ASSERT(!(-1 ? 0 : -1),"automatic success has failed");
STATIC_ASSERT(!(-1 ? 0 : 0),"automatic success has failed");
STATIC_ASSERT(!(-1 ? 0 : 1),"automatic success has failed");
STATIC_ASSERT(-1 ? 1 : -1,"automatic success has failed");
STATIC_ASSERT(-1 ? 1 : 0,"automatic success has failed");
STATIC_ASSERT(-1 ? 1 : 1,"automatic success has failed");
STATIC_ASSERT(0 ? -1 : -1,"automatic success has failed");
STATIC_ASSERT(!(0 ? -1 : 0),"automatic success has failed");
STATIC_ASSERT(0 ? -1 : 1,"automatic success has failed");
STATIC_ASSERT(0 ? 0 : -1,"automatic success has failed");
STATIC_ASSERT(!(0 ? 0 : 0),"automatic success has failed");
STATIC_ASSERT(0 ? 0 : 1,"automatic success has failed");
STATIC_ASSERT(0 ? 1 : -1,"automatic success has failed");
STATIC_ASSERT(!(0 ? 1 : 0),"automatic success has failed");
STATIC_ASSERT(0 ? 1 : 1,"automatic success has failed");
STATIC_ASSERT(1 ? -1 : -1,"automatic success has failed");
STATIC_ASSERT(1 ? -1 : 0,"automatic success has failed");
STATIC_ASSERT(1 ? -1 : 1,"automatic success has failed");
STATIC_ASSERT(!(1 ? 0 : -1),"automatic success has failed");
STATIC_ASSERT(!(1 ? 0 : 0),"automatic success has failed");
STATIC_ASSERT(!(1 ? 0 : 1),"automatic success has failed");
STATIC_ASSERT(1 ? 1 : -1,"automatic success has failed");
STATIC_ASSERT(1 ? 1 : 0,"automatic success has failed");
STATIC_ASSERT(1 ? 1 : 1,"automatic success has failed");

// check sizeof: sizeof(char)==1 and so on
STATIC_ASSERT(1==sizeof 'A',"automatic success has failed");
STATIC_ASSERT(1==sizeof(char),"automatic success has failed");
STATIC_ASSERT(1==sizeof(signed char),"automatic success has failed");
STATIC_ASSERT(1==sizeof(unsigned char),"automatic success has failed");

STATIC_ASSERT(sizeof 'A'==1,"automatic success has failed");
STATIC_ASSERT(sizeof(char)==1,"automatic success has failed");
STATIC_ASSERT(sizeof(signed char)==1,"automatic success has failed");
STATIC_ASSERT(sizeof(unsigned char)==1,"automatic success has failed");

// other target-independent reality checks on sizeof
STATIC_ASSERT(sizeof(short),"automatic success has failed");
STATIC_ASSERT(sizeof(signed short),"automatic success has failed");
STATIC_ASSERT(sizeof(unsigned short),"automatic success has failed");

STATIC_ASSERT(sizeof(int),"automatic success has failed");
STATIC_ASSERT(sizeof(signed int),"automatic success has failed");
STATIC_ASSERT(sizeof(unsigned int),"automatic success has failed");
STATIC_ASSERT(sizeof(signed),"automatic success has failed");
STATIC_ASSERT(sizeof(unsigned),"automatic success has failed");

STATIC_ASSERT(sizeof(long),"automatic success has failed");
STATIC_ASSERT(sizeof(signed long),"automatic success has failed");
STATIC_ASSERT(sizeof(unsigned long),"automatic success has failed");
STATIC_ASSERT(sizeof(long int),"automatic success has failed");
STATIC_ASSERT(sizeof(signed long int),"automatic success has failed");
STATIC_ASSERT(sizeof(unsigned long int),"automatic success has failed");

STATIC_ASSERT(sizeof(long long),"automatic success has failed");
STATIC_ASSERT(sizeof(signed long long),"automatic success has failed");
STATIC_ASSERT(sizeof(unsigned long long),"automatic success has failed");
STATIC_ASSERT(sizeof(long long int),"automatic success has failed");
STATIC_ASSERT(sizeof(signed long long int),"automatic success has failed");
STATIC_ASSERT(sizeof(unsigned long long int),"automatic success has failed");

